{"version":3,"sources":["scripts/carusel.js","scripts/menu.js","scripts/sub-menu.js","scripts/planer.js","scripts/schedule.js","scripts/text-cropping.js","scripts.js"],"names":["onInit","document","querySelectorAll","forEach","list","setCarusel","parentElement","querySelector","addEventListener","onTouchStart","onTouchEnd","onResize","touchStartX","touchMinDist","e","changedTouches","pageX","distX","Math","abs","touchSetCarucel","direct","target","closest","parent","step","button","section","buttons","lenght","childElementCount","w","firstElementChild","offsetWidth","count","ceil","index","dataset","carusel","style","transform","opacity","pointerEvents","window","burger","menu","classList","contains","remove","add","onClick","currentDate","Date","viewDays","root","grid","cleanGrid","innerHTML","checkViewDays","innerWidth","createCol","modeClass","elem","createElement","append","renderTimeCol","fromTime","toTime","timeInterval","htmlStr","i","timeStrArr","toTimeString","split","timeStr","renderDayCol","tasks","date","dateStrArr","toISOString","nameWeek","getDay","dateStr","task","find","el","from","toTaskTime","duration","j","name","getStartWeek","difDay","startWeek","getTime","renderGrid","to","renderSelect","fromStrArr","fromStr","toStrArr","toStr","textContent","main","id","viewWeek","setViewWeek","getWeeks","year","month","twoLen","time","timeTwo","length","renderDays","firstDay","daysInMonth","getDate","l","lastDay","countEmptyCell","getFullYear","getMonth","d","weekNames","fh","getHours","fm","getMinutes","th","tm","filial","listBox","box","text","clone","position","visibility","width","clientWidth","body","appendChild","clientHeight","substring","require"],"mappings":"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","file":"scripts.998168d0.js","sourceRoot":"..\\src","sourcesContent":["function onInit() {\r\n    let lists = document.querySelectorAll('[data-carusel]')\r\n    lists.forEach((list) => {\r\n        let section = list.parentElement.parentElement\r\n        let button = section.querySelector('button[onclick]')\r\n        setCarusel(button, 0)\r\n        list.addEventListener('touchstart', onTouchStart)\r\n        list.addEventListener('touchend', onTouchEnd)\r\n    })\r\n}\r\n\r\nfunction onResize() {\r\n    let lists = document.querySelectorAll('[data-carusel]')\r\n    lists.forEach((list) => {\r\n        let section = list.parentElement.parentElement\r\n        let button = section.querySelector('button[onclick]')\r\n        setCarusel(button, 0)\r\n    })\r\n}\r\n\r\nlet touchStartX = 0\r\nlet touchMinDist = 30\r\n\r\nfunction onTouchStart(e) {\r\n    touchStartX = e.changedTouches[0].pageX\r\n} \r\n\r\nfunction onTouchEnd(e) {\r\n    let distX = e.changedTouches[0].pageX - touchStartX\r\n    let absDistX = Math.abs(distX)\r\n    let distOk = (absDistX > touchMinDist)\r\n    if (distOk) {\r\n        let touchDirect = (distX < 0) ? 'left' : 'right'\r\n        touchSetCarucel(e, touchDirect)\r\n    }\r\n} \r\n\r\nfunction touchSetCarucel(e, direct) {\r\n    let list = e.target.closest('[data-carusel]')\r\n    if (parent) {\r\n        let step = (direct === 'left') ? 1 : (direct === 'right') ? -1 : 0\r\n        let section = list.parentElement.parentElement\r\n        let button = section.querySelector('button[onclick]')\r\n        setCarusel(button, step)\r\n    }\r\n}\r\n\r\nfunction setCarusel(button, step) {\r\n    // console.log({target, step})\r\n    let section = button.parentElement\r\n    let buttons = section.querySelectorAll('button[onclick]')\r\n    let list = section.querySelector('[data-carusel]')\r\n    let lenght = list.childElementCount\r\n    let w = list.firstElementChild.offsetWidth + 10\r\n    let viewLenght = Math.ceil(list.offsetWidth / w)\r\n    let count = lenght - viewLenght\r\n    // console.log({list, buttons, viewLenght, count})\r\n    let index = +(list.dataset.carusel) + step\r\n    if(index >= 0 && index <= count) {\r\n        list.style.transform = `translateX(calc(${index} * ${w}px * -1))`\r\n        list.dataset.carusel = index\r\n    }\r\n    if(index <= 0) {\r\n        buttons[0].style.opacity = 0        \r\n        buttons[0].style.pointerEvents = 'none'        \r\n    } else {\r\n        buttons[0].style.opacity =  1       \r\n        buttons[0].style.pointerEvents = null        \r\n    }\r\n    if(index >= count) {\r\n        buttons[1].style.opacity = 0        \r\n        buttons[1].style.pointerEvents = 'none'        \r\n    } else {\r\n        buttons[1].style.opacity =  1       \r\n        buttons[1].style.pointerEvents = null        \r\n    }\r\n}\r\n\r\nonInit()\r\nwindow.addEventListener('resize', onResize)\r\nwindow.setCarusel = setCarusel\r\n","let burger = document.querySelector('.header__menu')\r\nlet menu = document.querySelector('.main-menu')\r\n\r\nburger.addEventListener('click', (e) => {\r\n    let isHide = menu.classList.contains('hide')\r\n    if(isHide) {\r\n        menu.classList.remove('hide')\r\n        menu.classList.add('show')\r\n        burger.classList.add('show-menu')\r\n    }else {\r\n        menu.classList.remove('show')\r\n        menu.classList.add('hide')\r\n        burger.classList.remove('show-menu')\r\n    }\r\n})","let buttons = document.querySelectorAll('.m-sub-menu, .m-sub-menu__close')\r\nlet menu = document.querySelector('.page__sub-menu')\r\n\r\nconst onClick = (e) => {\r\n    // debugger\r\n    let isHide = menu.classList.contains('hide')\r\n    if(isHide) {\r\n        menu.classList.remove('hide')\r\n        menu.classList.add('show')\r\n    }else {\r\n        menu.classList.remove('show')\r\n        menu.classList.add('hide')\r\n    }\r\n}\r\nbuttons.forEach((button) => {\r\n    button.addEventListener('click', onClick)\r\n})","let currentDate = new Date()\r\nlet viewDays = 7\r\n\r\nlet root = document.querySelector('.planer') //корн эл\r\nlet grid = root && root.querySelector('.planer-grid')\r\n\r\nfunction cleanGrid() {\r\n    grid.innerHTML = ''\r\n}\r\n\r\nfunction checkViewDays() {\r\n    if (window.innerWidth <= 600) {\r\n        viewDays = 1\r\n    }\r\n    else {\r\n        viewDays = 7\r\n    }\r\n}\r\n\r\nfunction createCol(modeClass = []) {\r\n    let elem = document.createElement('div')\r\n    elem.classList.add('planer-grid__col', ...modeClass)\r\n    grid.append(elem)\r\n    return elem\r\n}\r\n\r\nfunction renderTimeCol(fromTime, toTime, timeInterval) {\r\n    let elem = createCol(['time'])\r\n    let htmlStr = '<div class=\"cell\"></div>'\r\n    for (let i = fromTime; i < toTime; i = i + timeInterval) {\r\n        let timeStrArr = new Date(i).toTimeString().split(':')\r\n        let timeStr = timeStrArr[0] + ':' + timeStrArr[1]\r\n        htmlStr += `<div class=\"cell\"><span>${timeStr}</span></div>`\r\n    }    \r\n    elem.innerHTML = htmlStr\r\n}\r\n\r\nfunction renderDayCol(fromTime, toTime, timeInterval, tasks) {\r\n    let date = new Date(fromTime)\r\n    let elem = createCol()\r\n    let weekNames = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'] \r\n    let dateStrArr = date.toISOString().split('T')[0].split('-')\r\n    let nameWeek = weekNames[date.getDay()]\r\n    let dateStr = `${dateStrArr[2]}.${dateStrArr[1]} (${nameWeek})`\r\n    let htmlStr = `<div class=\"cell\">${dateStr}</div>`\r\n    for (let i = fromTime; i < toTime; i = i + timeInterval) {\r\n        let task = tasks.find(el => el.from === i)\r\n        if (task) {\r\n            htmlStr += '<div class=\"planer-grid__task\">'\r\n            let toTaskTime = task.from + (task.duration * 60 * 1000)\r\n            for (let j = i; j < toTaskTime; j = j + timeInterval) {\r\n                htmlStr += '<div class=\"cell\"><span></span></div>'\r\n                i = j\r\n            }\r\n            htmlStr += `<div class=\"planer-task cropping\"><span>${task.name}</span></div>`\r\n            htmlStr += '</div>'\r\n        } else {\r\n            htmlStr += '<div class=\"cell\"><span></span></div>'\r\n        }\r\n    }\r\n    elem.innerHTML = htmlStr\r\n}\r\n\r\nfunction getStartWeek(date) {\r\n    let difDay = date.getDay() - 1 //разность дней\r\n    let startWeek = date.getTime() - (difDay * 24 * 60 * 60 * 1000)\r\n    return new Date(startWeek)\r\n}\r\n\r\nfunction renderGrid(from, to, tasks) {\r\n    cleanGrid()\r\n    let timeInterval = 20 * 60 * 1000\r\n    let fromTime = from.getTime()\r\n    let toTime = to.getTime()\r\n    renderTimeCol(fromTime, toTime, timeInterval)\r\n    for (let i = 0; i < viewDays; i++) {\r\n        renderDayCol(fromTime, toTime, timeInterval, tasks)\r\n        fromTime += 24 * 60 * 60 * 1000\r\n        toTime += 24 * 60 * 60 * 1000\r\n    }\r\n}\r\n\r\nfunction renderSelect(from) {\r\n    let elem = root.querySelector('.planer-select span')\r\n    let toTime = from.getTime() + (viewDays - 1) * 24 * 60 * 60 * 1000\r\n    let to = new Date(toTime)\r\n    let fromStrArr = from.toISOString().split('T')[0].split('-')\r\n    let fromStr = `${fromStrArr[2]}.${fromStrArr[1]}`\r\n    let toStrArr = to.toISOString().split('T')[0].split('-')\r\n    let toStr = `${toStrArr[2]}.${toStrArr[1]}`\r\n    elem.textContent = `${fromStr} - ${toStr}`\r\n}\r\n\r\nfunction main() {\r\n    let from = new Date(2019, 9, 14, 8, 0)\r\n    let to = new Date(2019, 9, 14, 18, 0)\r\n    let tasks = [\r\n        {\r\n            id: 1,\r\n            name: 'Стерилизация',\r\n            from: new Date(2019, 9, 20, 9, 0).getTime(),\r\n            duration: 20\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Стерилизация',\r\n            from: new Date(2019, 9, 20, 10, 20).getTime(),\r\n            duration: 20\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Стерилизация',\r\n            from: new Date(2019, 9, 19, 8, 0).getTime(),\r\n            duration: 40\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Стерилизация',\r\n            from: new Date(2019, 9, 17, 8, 40).getTime(),\r\n            duration: 60\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Стерилизация',\r\n            from: new Date(2019, 9, 14, 9, 40).getTime(),\r\n            duration: 60\r\n        }\r\n    ]\r\n    checkViewDays()\r\n    renderSelect(from)\r\n    renderGrid(from, to, tasks)\r\n    window.addEventListener('resize', () => {\r\n        checkViewDays()\r\n        renderSelect(from)\r\n        renderGrid(from, to, tasks)\r\n    })\r\n}\r\n\r\nif (root) {\r\n    main()\r\n}\r\n","let root = document.querySelector('.schedule') //корн эл\r\nlet grid = root && root.querySelector('.schedule-grid__body')\r\nlet viewWeek = 1\r\nlet currentDate = new Date()\r\n\r\nfunction cleanGrid() {\r\n    grid.innerHTML = ''\r\n}\r\n\r\nfunction setViewWeek() {\r\n    if (window.innerWidth <= 600) {\r\n        viewDays = 1\r\n    }\r\n    else {\r\n\r\n        viewDays = getWeeks(year, month)\r\n    }\r\n}\r\n\r\nfunction twoLen(time) {\r\n    let timeTwo = ''\r\n    // console.log((time + '').length )\r\n    if ((time + '').length == 1) {\r\n        timeTwo = '0' + time\r\n    }\r\n    else {\r\n        timeTwo = time\r\n    }\r\n    return timeTwo\r\n}\r\n\r\nfunction renderDays(year, month, tasks) {\r\n    let elem = grid\r\n    let firstDay = new Date(year, month, 1).getDay()\r\n    let daysInMonth = 32 - new Date(year, month, 32).getDate()\r\n    let l = new Date(year, month + 1, 0)\r\n    let weekInMonth =  Math.ceil((l.getDate() - (l.getDay() ? l.getDay() : 7)) / 7 ) + 1\r\n    let htmlStr = ''\r\n    let lastDay = new Date(year, month, daysInMonth).getDay()\r\n    let countEmptyCell = 0\r\n    if (firstDay == 0) {\r\n        countEmptyCell = 6\r\n    } else {\r\n        countEmptyCell = firstDay - 1\r\n    }\r\n    for (let i = 0; i < countEmptyCell; i++) {\r\n        htmlStr += `<div class=\"cell empty\"></div>`\r\n    }\r\n    for (let i = 1; i <= daysInMonth; i = i + 1) {\r\n        let task = tasks.find(el => new Date(el.from).getFullYear() === year && new Date(el.from).getMonth() === month && new Date(el.from).getDate() === i)\r\n        let d = new Date(year, month, i).getDay()\r\n        let weekNames = ['ВС', 'ПН', 'ВТ', 'СР', 'ЧТ', 'ПТ', 'СБ']\r\n        if (task) {\r\n            let fh = twoLen(new Date(task.from).getHours())\r\n            let fm = twoLen(new Date(task.from).getMinutes())\r\n            let th = twoLen(new Date(task.to).getHours())\r\n            let tm = twoLen(new Date(task.to).getMinutes())\r\n            if (task.filial == 1) {\r\n                htmlStr +=`<div class=\"cell cell__weekName\">${weekNames[d]}</div>`\r\n                htmlStr +=`<div class=\"cell green\"><div class=\"cell__dom\">${i}</div><span>${fh}:${fm} - ${th}:${tm}</span></div> `\r\n            }\r\n            if (task.filial == 2) {\r\n                htmlStr +=`<div class=\"cell  cell__weekName\">${weekNames[d]}</div>`\r\n                htmlStr +=`<div class=\"cell blue\"><div class=\"cell__dom\">${i}</div><span>${fh}:${fm} - ${th}:${tm}</span></div> `\r\n            }\r\n            if (task.filial == 3) {\r\n                htmlStr +=`<div class=\"cell  cell__weekName\">${weekNames[d]}</div>`\r\n                htmlStr += `<div class=\"cell orange\"><div class=\"cell__dom\">${i}</div><span>${fh}:${fm} - ${th}:${tm}</span></div> `\r\n            }\r\n            if (task.filial == 4) {\r\n                htmlStr +=`<div class=\"cell  cell__weekName\">${weekNames[d]}</div>`\r\n                htmlStr +=`<div class=\"cell yellow\"><div class=\"cell__dom\">${i}</div><span>${fh}:${fm} - ${th}:${tm}</span></div> `\r\n            }\r\n        }\r\n        else {\r\n            htmlStr +=`<div class=\"cell  cell__weekName\">${weekNames[d]}</div>`\r\n            htmlStr +=`<div class=\"cell\"><div class=\"cell__dom\">${i}</div></div>`\r\n        }\r\n    }  \r\n    for (let i = 0; i < 7 - lastDay; i++) {\r\n        // htmlStr +=`<div class=\"cell  cell__weekName\">${weekNames[d]}</div>`\r\n        htmlStr += `<div class=\"cell empty\"></div>`\r\n    }\r\n\r\n    elem.innerHTML = htmlStr\r\n}\r\n\r\nfunction main() {\r\n    let tasks = [\r\n        {\r\n            from: new Date(2019, 9, 1, 9, 0).getTime(),\r\n            to: new Date(2019, 9, 1, 17, 0).getTime(),\r\n            filial: 1\r\n        },\r\n        {\r\n            from: new Date(2019, 9, 2, 9, 0).getTime(),\r\n            to: new Date(2019, 9, 2, 17, 0).getTime(),\r\n            filial: 1\r\n        },\r\n        {\r\n            from: new Date(2019, 9, 3, 9, 0).getTime(),\r\n            to: new Date(2019, 9, 3, 17, 0).getTime(),\r\n            filial: 3\r\n        },\r\n        {\r\n            from: new Date(2019, 9, 4, 9, 0).getTime(),\r\n            to: new Date(2019, 9, 4, 17, 0).getTime(),\r\n            filial: 3\r\n        },\r\n        {\r\n            from: new Date(2019, 9, 5, 9, 0).getTime(),\r\n            to: new Date(2019, 9, 5, 17, 0).getTime(),\r\n            filial: 3\r\n        },\r\n        {\r\n            from: new Date(2019, 9, 15, 9, 0).getTime(),\r\n            to: new Date(2019, 9, 15, 17, 0).getTime(),\r\n            filial: 3\r\n        },\r\n        {\r\n            from: new Date(2019, 9, 17, 9, 0).getTime(),\r\n            to: new Date(2019, 9, 17, 17, 0).getTime(),\r\n            filial: 4\r\n        },\r\n        {\r\n            from: new Date(2019, 9, 19, 9, 0).getTime(),\r\n            to: new Date(2019, 9, 19, 17, 0).getTime(),\r\n            filial: 1\r\n        },\r\n        {\r\n            from: new Date(2019, 9, 20, 9, 0).getTime(),\r\n            to: new Date(2019, 9, 20, 17, 0).getTime(),\r\n            filial: 4\r\n        },\r\n        {\r\n            from: new Date(2019, 9, 27, 9, 0).getTime(),\r\n            to: new Date(2019, 9, 27, 17, 0).getTime(),\r\n            filial: 2\r\n        },\r\n        {\r\n            from: new Date(2019, 9, 29, 9, 0).getTime(),\r\n            to: new Date(2019, 9, 29, 17, 0).getTime(),\r\n            filial: 1\r\n        },\r\n        {\r\n            from: new Date(2019, 9, 30, 9, 0).getTime(),\r\n            to: new Date(2019, 9, 30, 17, 0).getTime(),\r\n            filial: 2\r\n        }\r\n    ]\r\n    renderDays(2019, 9, tasks)\r\n}\r\n\r\nif (root) {\r\n    main()\r\n}\r\n\r\n// console.log(new Date)","let listBox = document.querySelectorAll('.cropping')\r\n\r\nfunction main() {\r\n    listBox.forEach((box) => {\r\n        let text = box.innerHTML\r\n        let clone = document.createElement('div')\r\n        clone.style.position = 'absolute'\r\n        clone.style.visibility = 'hidden'\r\n        clone.style.width = box.clientWidth + 'px'\r\n        clone.innerHTML = text\r\n        document.body.appendChild(clone);\r\n\r\n        let l = text.length - 1\r\n        for (; l >= 0 && clone.clientHeight > box.clientHeight; l--) {\r\n            clone.innerHTML = text.substring(0, l) + '...'\r\n        }\r\n        box.innerHTML = clone.innerHTML\r\n    })\r\n}\r\nfunction onResize() {\r\n    if (listBox) {\r\n        main()\r\n    }\r\n}\r\nif (listBox) {\r\n    main()\r\n}\r\nwindow.addEventListener('resize', onResize)\r\n// window.setCarusel = setCarusel","require('./scripts/carusel')\r\nrequire('./scripts/menu')\r\nrequire('./scripts/sub-menu')\r\nrequire('./scripts/planer')\r\nrequire('./scripts/schedule')\r\nrequire('./scripts/text-cropping')\r\n"]}